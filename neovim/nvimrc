set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

Plugin 'VundleVim/Vundle.vim'

Plugin 'FooSoft/vim-argwrap'
Plugin 'junegunn/fzf'
Plugin 'junegunn/fzf.vim'
Plugin 'tpope/vim-commentary'
Plugin 'tpope/vim-fugitive'
Plugin 'tpope/vim-repeat'
Plugin 'tpope/vim-surround'

Plugin 'jukuisma/catppuccin-nvim'
Plugin 'jukuisma/vim-airline'
Plugin 'jukuisma/vim-airline-themes'

call vundle#end()

set nocompatible
syntax on
filetype plugin indent on

set nomodeline
set hidden
set wildmenu
set showcmd
set hlsearch
set ignorecase
set smartcase
set backspace=indent,eol,start
set autoindent
set nostartofline
set ruler
set laststatus=2
set confirm
set visualbell
set t_vb=
set mouse=a
set cmdheight=1
set number
set notimeout ttimeout ttimeoutlen=10
set shiftwidth=4
set softtabstop=4
set expandtab
set cc=80
set number relativenumber
set nu rnu
set ff=unix

" Set C specific options
autocmd FileType c setlocal shiftwidth=4 tabstop=4 noexpandtab
autocmd FileType cpp setlocal shiftwidth=4 tabstop=4 noexpandtab

" Set leader to space
let mapleader = "\<Space>"

" Map yanking, pasting and deleting to system clipboard
map <leader>y "+y
map <leader>Y "+Y
map <leader>p "+p
map <leader>P "+P
map <leader>d "+d
map <leader>D "+D

" File commands
map <leader>q :q<CR>
map <leader>w :w<CR>
map <leader>x :x<CR>
map <leader>j :e #<CR>
nmap <leader>s :%s/
vmap <leader>s :s/
map <leader><leader> :Files<CR>
map <leader>ff :Files<CR>
map <leader>fb :Buffers<CR>
map <leader>fg :Rg<CR>

" Formatting
nmap <leader>fj :%!jq<CR>
nmap <leader>fx :%!xmllint --format -<CR>
vmap <leader>fj !jq<CR>
vmap <leader>fx !xmllint --format -<CR>

" ctags
map <leader>td <C-]>
map <leader>tl g]
map <leader>th <C-w><C-]>
map <leader>tj <C-t>

" Decimal to binary, hex and octal conversions
" Match all numbers in the current line and prompt for confirmation
map <leader>cb :s/\d\+/\=printf("0b%b", submatch(0))/gc<CR>
map <leader>co :s/\d\+/\=printf("0o%o", submatch(0))/gc<CR>
map <leader>cx :s/\d\+/\=printf("0x%x", submatch(0))/gc<CR>

" Git commands
map <leader>gb :Git blame<CR>
map <leader>gd :Gvdiffsplit<CR>
map <leader>gl :Git log<CR>
map <leader>gs :Git status<CR>

" xxd
nmap <leader>e :%!xxd<CR>
nmap <leader>r :%!xxd -r<CR>
vmap <leader>e !xxd<CR>
vmap <leader>r !xxd -r<CR>

" Run norm command
map <leader>n :norm<Space>

" Repeat last macro && ex command
map <leader>. @@
map <leader>, @:

" Set breakpoints
nmap <leader>di O__asm__ volatile ("int3");<Esc>j
nmap <leader>db O__asm__ volatile ("brk 0");<Esc>j
nmap <leader>dp Oimport pdb; pdb.set_trace()<Esc>j

" Faster navigation
map J }
map K {
map H b
map L w

" Jumplist navigation
map <C-j> <C-o>
map <C-k> <C-i>

" Set sensible navigation repeat directions
noremap , ;
noremap ; ,

" Splitting arguments
nnoremap gs :ArgWrap<CR>

" Remove all trailing whitespaces and clear highlighting
map <silent> <C-l> :%s/\s\+$//e<CR>:noh<CR>

" Theme
colorscheme catppuccin-mocha
let g:airline_theme='lucius'
